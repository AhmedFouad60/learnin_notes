>>>>>>set vim as the default editor in unix>>>>>>
sudo update-alternatives --config editor
# Type the number which corresponds to Vim here (after installing it) then press Enter.

>>>>>>>>>>>>>>>delete annoying spellcheck<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
----> :hi clear SpellBad

>>>>>>>>>>>>>>>folding<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
(manually)
:set foldmethod=manual 
--> (v) for visual mode and hightlight what you want then press (zf) for folding and (za) for unfolding .....(zR) to unfold every folded in the page mean unfold recursifly  
 
>>>>>>>>>>>>>>>>>>dublicate a line<<<<<<<<<<<<<<<<<<<<<<<<<<
yy ---> to copy a line + p  ==> dublicate the line  
(D)OR(dd) ==>delete a line 
P => to past after the cursor
p(small)=> to past before the cursor
>>>>>>>>>>>>>>>>>>>>>incremant the number<<<<<<<<<<<<<<<<<<<<
stand on the number and press ==> ctrl+a

>>>>>>>>>>>>colorscheme && syntax highlight <<<<<<<<<<<
:set colorscheme <name_of_color> ==>to set the color to the vim
:set syntax on =>to enable syntax hightlight
:set syntax off=>to diablae syntax hightlight
:set syn=java  =>to enable syntax hightlight for java 
---------------------NEW TAB------------------------------

:tabe % ==>
Opens a tab, editing the current file-name, % is the name of the current file.
:Te or :tabe %:h==>Opens a tab, show the current file directory.

gt==>Go to next tab.
gT==>Go to last tab.

tabs   =>list all tabs including their display window
(i)gt  =>go to tabe in position i

Ctrl+pgDn => go to the next tabe
Ctrl+pguP => go to the previous tabe

--------------------------------------------/auto save the file------- 
type in vim this command 
:autocmd CursorHold,CursorHoldI * update
-------------------------- Line_moves-------------------------------------------
move To the begging of the line ==>   ^ OR zero OR (shift+i)=> this will go to the begging of the line and switch to insert mode  
move to the end of the line => A     :)
-----------------------------------
---------Select All the code in the vim  -------
:%y+ (% --> All , y-->yand,+ --> copy to clipboard)

---------------------------------------------------------------
 go to specific line    for example  50G

 ---------------------------------------------------------------
 How do I tidy up an HTML file's indentation in VI?
 :filetype indent on
 :set filetype=html           # abbrev -  :set ft=html
 :set smartindent             # abbrev -  :set si
 _________________________________________________________
 How to merge multiple lines into on line in vim: (useful for css)
 [where to beging] j [number_of_lines]
 %j    => (% for all the file)
5j2    => contract from line 5 to the next 2 lines  
if you don't want  to replace the new lines with spaces use !
for example  j!10  

____________________________________________________OR 
 type v to select the lines you want then   shift+j

--------------------------------------------------------------------
How to write comment quickly?
just type  =>  gcc   to comment and uncomment the line 
----------------------------------------------------------
Refresh the page ---> :edit
----------------------------------------------------------
: set wrap ==> to make the words wrap over lines
: set nowrap==> to make the words take the whole line and extended over the line 
_____________________________________________________________________________________
NOte_time:	25/3/2017

:h  => to get the online help 

make like bookmark to return to that line again fast =>

If you find yourself editing a file that is larger than one screen, you will appreciate the functionality provided by marks. You can think of a mark in vim as a bookmark – once you place it somewhere, you can go back to it quickly and easily. Suppose you are editing a 300-word configuration file and for some reason need to repeatedly switch between lines 30 and 150 for example.

First, go to line #30 by entering :30 in ex mode, then return to command mode and hit ma (m, then a) to create a mark named “a” in line 30.

Then go to line 250 (with :250 in ex mode) and hit `a (backtick, then a) to return to mark a in line 30. You can use lowercase and uppercase letters to identify marks in vim (now repeat the process to create a mark named A in line #250).

////////////////////////////  Search ///////////////

/[anything]=> to search for anything 



////////////////////vim Sex////////////////
split the screen and /open file explorer in one of them

------------Good video about using spf13 and download pluigins----------
https://www.youtube.com/watch?v=92oOeFl21wE

for 
	tagbar pluigin => to use it type    ,tt 

	it list all variables and function in the file ,so if we are editting large file we can easly viual everthing  

	ctrl+w+l => to go to the right panel 
	p => hightlight the variable 
	enter => to go to the selected variable or function


	AUTOCOMPLETE  pluigin => CTRL+N   to get suggestions from the file 


---------------------------------------files-------------------------------------------

To edit all files in the current folder, use:
	vim *

To edit all files in tabs, use:
	vim -p *

To edit all files in horizontally split windows, use:
	vim -o *


---------------------------------------
parenthesis -braces

%   => to move to the (end or start of braces )
v % => to move to the (end or start of braces ) and select the between 

------------------------start Split long line to multiline-------------------------

visual the line you want then type           => gq


------------------------End Split long line to multiline-------------------------

----------------Start of open files of project while working with it--------


ctrl+E ==> give me the tree of the project while working
ctrl+p ==> similar to ctrl+E but this is better if you know the file name you can start type 
            and this will give you suggestion of files


----------------End of open files of project while working with it--------



----------------------- START autoComplete of file path------------------

first thing type the first chars of the path then ===>

CTRL+X   CTRL+f     => to give you the suggested files
CTRL+n              => to move up through the entries

----------------------- End autoComplete of file path------------------

---------------------start Go to specific line before enter the file --------------

vi +lineNumber fileName

vi +anyword   fileName         make you go to the specific word

---------------------End Go to specific line before enter the file --------------

















